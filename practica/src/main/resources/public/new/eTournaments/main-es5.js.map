{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_servicies/adminauthguard.service.ts","webpack:///src/app/_servicies/auth.interceptor.ts","webpack:///src/app/_servicies/match.service.ts","webpack:///src/app/_servicies/players.service.ts","webpack:///src/app/_servicies/profile.service.ts","webpack:///src/app/_servicies/rocketleague.service.ts","webpack:///src/app/_servicies/teams.service.ts","webpack:///src/app/_servicies/tournament.service.ts","webpack:///src/app/_servicies/users.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/createTournament/createtournament.component.ts","webpack:///src/app/createTournament/createtournament.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/info/info.component.ts","webpack:///src/app/info/info.component.html","webpack:///src/app/leaderboard/leaderboard.component.ts","webpack:///src/app/leaderboard/leaderboard.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/play.model.ts","webpack:///src/app/models/rol.model.ts","webpack:///src/app/models/team.model.ts","webpack:///src/app/models/tournament.model.ts","webpack:///src/app/models/upwrapper.model.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/rocketleague/rocketleague.component.ts","webpack:///src/app/rocketleague/rocketleague.component.html","webpack:///src/app/team/team.component.ts","webpack:///src/app/team/team.component.html","webpack:///src/app/tournament/tournament.component.ts","webpack:///src/app/tournament/tournament.component.html","webpack:///src/app/updateMatch/updateMatch.component.ts","webpack:///src/app/updateMatch/updateMatch.component.html","webpack:///src/app/updateProfile/updateProfile.component.ts","webpack:///src/app/updateProfile/updateProfile.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminAuthGuardService","router","localStorage","getItem","navigate","providedIn","UserAuthGuardService","AuthInterceptor","next","idToken","cloned","clone","headers","set","handle","cloned2","method","BASE_URL","GAME_URL","MatchService","tournamentservice","teamsservice","httpClient","play","idTournament","get","pipe","error","handleError","games","idPlay","resultArray","putGame","subscribe","_","window","history","back","console","game","id1","id2","body","JSON","stringify","put","id_game","status","text","resultBody","PlayersService","userId","idPlayer","team","ProfileService","file","idUser","post","wrapper","log","user","iduser","RocketleagueService","LEADERBOARD_URL","TeamsService","page","name","idTeam","MAP_URL","TournamentService","tournament","UsersService","http","redirectToHome","logged","pass","oldUser","basic","btoa","setItem","httpOptions","loggedUser","actualUser","actualUserName","username","actualPass","rol","rolDes","loggedS","userNameString","userName","routes","path","component","canActivate","routing","forRoot","AppComponent","userService","title","userLoggued","imgWebIconUrl","userLoggedName","getActualUserName","getLogged","notLogged","adminLogged","setUserId","logOut","response","logOutProcedure","location","reload","getUserByUserName","data","userLoggedId","reject","logout","res","removeItem","currentUserSubject","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","CreatetournamentComponent","tournamentService","addTournament","save","HomeComponent","imgCarr1Url","imgCarr2Url","imgCarr3Url","imgRlIcon","imgLeaderboard","imgUserLogo","InfoComponent","delay","ms","setTimeout","LeaderboardComponent","teamsService","teamsList","Array","pageCounter","pos","allShown","showMore","loaderLeaderboard","loadSpinner","getTeams","forEach","element","elo","push","unloadSpinner","LoginComponent","route","credentials","password","message","wrongInput","event","controls","value","login","loggedIn","notLoggedIn","returnUrl","snapshot","queryParams","Play","Rol","Team","Tournament","UserPlayerWrapper","User","ProfileComponent","profileService","activatedRoute","usersService","playersService","description","teamName","params","imgUrl","getPlayerByUserId","player","loadPie","fn","losses","wins","RegisterComponent","notEqualPass","email","userpassword","idRol","createUser","send","RocketleagueComponent","rocketleagueService","tournaments","imgSteamIconUrl","imgTwitchIconUrl","imgInfoIconUrl","imgDefaultTournamentUrl","imgBackgroundUrl","tournamentsOnHtml","getTournaments","respuesta","i","length","TeamComponent","user1","user2","user3","contUser","saved","notSaved","addTeam","readUser","changePlayerTeam","changeTeam","updatePlayerTeam","GOOGLE_API","GOOGLE_SCRIPT","TournamentComponent","plays","getPlays","getTournament","getTournamentById","numTeams","latitude","longitude","loadMap","func1","usr","plyr","joinTournament","addTeamToTournament","UpdateMatchComponent","matchservice","getGames","getTeambyName","name1","name2","winnerName","winner","updateMatch","result","updateGame","UpdateProfileComponent","playerService","uploadData","FormData","append","selectedFile","uploadProfilePicture","target","files","upload","updateProfile","onFileChanged","environment","production","apiUrl","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\n\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AdminAuthGuardService implements CanActivate{\r\n    role :string;\r\n    constructor(private router: Router){}\r\n\r\n    canActivate(/*next:ActivatedRouteSnapshot,state:RouterStateSnapshot */){\r\n        if (localStorage.getItem('role') === \"ADMIN\"){\r\n            return true;\r\n        }else{\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n@Injectable({providedIn: 'root'})\r\nexport class UserAuthGuardService implements CanActivate{\r\n    role :string;\r\n    constructor(private router: Router){}\r\n\r\n    canActivate(/*next:ActivatedRouteSnapshot,state:RouterStateSnapshot */){\r\n        if (localStorage.getItem('role') === \"ADMIN\" || localStorage.getItem('role') === \"USER\"){\r\n            return true;\r\n        }else{\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n    constructor(private router:Router){}\r\n    intercept(req: HttpRequest<any>, next:HttpHandler): Observable<HttpEvent<any>>{\r\n        const idToken = localStorage.getItem(\"id_token\");\r\n\r\n        if(idToken){\r\n\r\n            const cloned = req.clone({\r\n                headers: req.headers.set(\"Authorization\",\r\n                \"Basic \"+ idToken)\r\n            });\r\n\r\n            return next.handle(cloned);\r\n\r\n        }else{\r\n\r\n            const cloned2 = req.clone({\r\n                headers: req.headers.set(\"Authorization\",\r\n                \"Basic \"+ idToken)\r\n            });\r\n\r\n            if(req.method === \"POST\"){\r\n                return next.handle(req);\r\n            }else{\r\n                return next.handle(cloned2);\r\n            }\r\n\r\n            \r\n            \r\n        }\r\n\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Play } from '../models/play.model';\r\nimport { Team } from '../models/team.model';\r\nimport { Game } from '../models/game.model';\r\nimport { TournamentService } from './tournament.service';\r\nimport { TeamsService } from './teams.service';\r\nimport { i18nMetaToDocStmt } from '@angular/compiler/src/render3/view/i18n/meta';\r\n\r\nconst BASE_URL = '/api/teamsOnGame/';\r\nconst GAME_URL = '/api/tournaments/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\n\r\n\r\nexport class MatchService{\r\n    play = new Play;\r\n    id:Array<number>;\r\n    team:Team;\r\n    resultArray:Array<resultBody>;\r\n   \r\n\r\n    constructor(private tournamentservice:TournamentService, private teamsservice:TeamsService, private httpClient: HttpClient, public router:Router){}\r\n\r\n    getGames(idTournament: number):Observable<Game[]> {\r\n        return this.httpClient.get(GAME_URL + idTournament + '/games').pipe(\r\n            catchError(error => this.handleError(error))\r\n        )as Observable <Game[]>\r\n    }\r\n\r\n    updateMatch(games:Array<Game>,idPlay:number,id:Array<number>,resultArray:Array<resultBody>){\r\n             \r\n         this.putGame(games[idPlay-1],id[0],id[1],resultArray).subscribe(\r\n            _ => {\r\n                window.history.back();\r\n            },\r\n            error => console.error('Error updating match: ' + error)\r\n         );\r\n    }\r\n    private putGame(game: Game, id1: number, id2: number, resultArray:Array<resultBody>){\r\n        const body = JSON.stringify(resultArray);\r\n        const headers = new HttpHeaders({'Content-Type': 'application/json',}); \r\n            return this.httpClient.put(BASE_URL + id1 +\"+\" + id2 +\"+\"+ game.id_game, body, { headers }).pipe(\r\n                catchError(error => this.handleError(error))\r\n            )\r\n     }\r\n             \r\n    \r\n    \r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        if(error.status === 403 || error.status === 401 || error.status === 0){\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n\t\treturn Observable.throw(\"Server error (\" + error.status + \"): \" + error.text())\r\n\t}\r\n\r\n}\r\n\r\nexport class resultBody{\r\n    result:number;\r\n    winner:boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Player } from '../models/player.model';\r\nimport { Team } from '../models/team.model';\r\n\r\nconst BASE_URL = '/api/player/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PlayersService {\r\n\r\n    constructor(private httpClient: HttpClient, public router:Router){}\r\n\r\n    getPlayerByUserId(userId: number): Observable<Player> {\r\n        return this.httpClient.get(BASE_URL + userId).pipe(\r\n            catchError(error => this.handleError(error))\r\n        )as Observable<Player>;\r\n    }\r\n\r\n    updatePlayerTeam(idPlayer: number, team: Team) {\r\n        return this.httpClient.put(BASE_URL + idPlayer + \"/team\", team).pipe(\r\n            catchError(error => this.handleError(error))\r\n        )\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        if(error.status === 403 || error.status === 401 || error.status === 0){\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n\t\treturn Observable.throw(\"Server error (\" + error.status + \"): \" + error.text())\r\n\t}\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Player } from '../models/player.model';\r\nimport { Team } from '../models/team.model';\r\nimport { UserPlayerWrapper } from '../models/upwrapper.model';\r\n\r\nconst BASE_URL = '/api/player/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProfileService {\r\n\r\n    constructor(private httpClient: HttpClient, public router:Router){}\r\n\r\n    getPlayerByUserId(userId: number): Observable<Player> {\r\n        return this.httpClient.get(BASE_URL + userId).pipe(\r\n            catchError(error => this.handleError(error))\r\n        )as Observable<Player>;\r\n    }\r\n\r\n   /* updatePlayerTeam(idPlayer: number, team: Team) {\r\n        return this.httpClient.put(BASE_URL + idPlayer + \"/team\", team).pipe(\r\n            catchError(error => this.handleError(error))\r\n        )\r\n    }*/\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        if(error.status === 403 || error.status === 401 || error.status === 0){\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n\t\treturn throwError(\"Server error (\" + error.status + \"): \" + error.text())\r\n    }\r\n    \r\n    uploadProfilePicture(file:FormData,idUser:number):Observable<any>{\r\n        return this.httpClient.post(\"/api/user/\"+ idUser+ \"/image\",file).pipe(\r\n            catchError(error => this.handleError(error))\r\n        )as Observable<any>;\r\n    }\r\n\r\n    updateProfile(wrapper:UserPlayerWrapper): Observable<UserPlayerWrapper>{\r\n        console.log(JSON.stringify(wrapper));\r\n        return this.httpClient.put<UserPlayerWrapper>(\"/api/user/\"+ wrapper.user.iduser, wrapper).pipe(\r\n            catchError(error => this.handleError(error))\r\n        )as Observable<UserPlayerWrapper>;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Tournament } from '../models/tournament.model';\r\n\r\nconst BASE_URL = '/api/tournaments';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RocketleagueService{\r\n    constructor(private httpClient: HttpClient, public router:Router){}\r\n\r\n    getTournaments(): Observable<Tournament[]> {\r\n        return this.httpClient.get(BASE_URL).pipe(\r\n            catchError(error => this.handleError(error))\r\n        ) as Observable<Tournament[]>;\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        if(error.status === 403 || error.status === 401 || error.status === 0){\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n\t\treturn Observable.throw(\"Server error (\" + error.status + \"): \" + error.text())\r\n\t}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Team } from '../models/team.model';\r\n\r\nconst BASE_URL = '/api/teams/';\r\nconst LEADERBOARD_URL = '/api/leaderBoardLoaded/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TeamsService {\r\n\r\n    constructor(private httpClient: HttpClient, private router:Router){}\r\n\r\n    getLeaderBoard(): Observable<Team[]>{\r\n        return this.httpClient.get<Team[]>(LEADERBOARD_URL).pipe(\r\n            catchError(error => this.handleError(error))\r\n        ) as Observable<Team[]>;\r\n    }\r\n\r\n    getTeams(page: number): Observable<Team[]> {\r\n        return this.httpClient.get<Team[]>(BASE_URL + \"page=\" + page).pipe(\r\n            catchError(error => this.handleError(error))\r\n        ) as Observable<Team[]>;\r\n    }\r\n\r\n    getTeambyName (name: string): Observable<Team>{\r\n        return this.httpClient.get<Team[]>(BASE_URL + name).pipe(\r\n            catchError(error => this.handleError(error))\r\n        ) as Observable<Team>;\r\n    }\r\n\r\n    addTeam(team: Team): Observable<Team>{\r\n        return this.httpClient.post<Team>(BASE_URL, team).pipe(\r\n            catchError(error => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    updateTeam(team: Team) {\r\n        return this.httpClient.put(BASE_URL + team.idTeam, team).pipe(\r\n            catchError(error => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        if(error.status === 403 || error.status === 401 || error.status === 0){\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n\t\treturn throwError(\"Server error (\" + error.status + \"): \" + error.text);\r\n\t}\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\n\r\nimport { Play } from '../models/play.model';\r\nimport { Team } from '../models/team.model';\r\nimport { Tournament } from '../models/tournament.model';\r\n\r\nconst BASE_URL = '/api/tournaments';\r\nconst MAP_URL = '/api/loadCoordenates';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TournamentService{\r\n    constructor(private httpClient: HttpClient, public router:Router){}\r\n\r\n    getPlays(id: number): Observable<Play[]> {\r\n        return this.httpClient.get(BASE_URL + '/' + id + '/matches').pipe(\r\n            catchError(error => this.handleError(error))\r\n        ) as Observable<Play[]>;\r\n    }\r\n\r\n    getTournamentById(id: number):Observable<Tournament> {\r\n        return this.httpClient.get(BASE_URL + '/' + + id).pipe(\r\n            catchError(error => this.handleError(error))\r\n        )as Observable <Tournament>\r\n    }\r\n    \r\n    addTournament(tournament: Tournament): Observable<Tournament>{\r\n        \r\n        const body = JSON.stringify(tournament);\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n        });\r\n        \r\n        return this.httpClient.post<Tournament>(BASE_URL, body, { headers }).pipe(\r\n            catchError(error => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    joinTournament(idTournament: number, team: Team){\r\n        \r\n        const body = JSON.stringify(team);\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n        });\r\n        return this.httpClient.post<Team>(BASE_URL+ '/' + idTournament+ '/teams', body, { headers }).pipe(\r\n            catchError(error => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        if(error.status === 403 || error.status === 401 || error.status === 0){\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n\t\tconsole.error(error);\r\n\t\treturn Observable.throw(\"Server error (\" + error.status + \"): \" + error.text())\r\n\t}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { User } from '../models/user.model';\r\n\r\nconst BASE_URL = '/api/user/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UsersService {\r\n\r\n  actualUser: string;\r\n  actualUserName: string;\r\n  actualPass: string;\r\n  loggedUser: User;\r\n  redirectToHome: string = \"/index\";\r\n  currentUser: Observable<User>;\r\n  currentUserSubject: BehaviorSubject<User>;\r\n  logged: boolean = false;\r\n\r\n  constructor(private http: HttpClient, private router:Router) {\r\n    //this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    //this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  login(user: string, pass: string, oldUser: boolean) {\r\n    \r\n    var basic = btoa(user + ':' + pass);\r\n    localStorage.setItem('id_token' ,basic);\r\n\r\n    var httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'X-Requested-With' : 'XMLHttpRequest',\r\n        'Authorization': 'Basic ' + basic\r\n      })\r\n    };\r\n\r\n    \r\n    \r\n    return this.http.get<any>('/api/logIn', httpOptions).pipe(\r\n      map(user => {\r\n        //user.authData = window.btoa(user + ':' + pass);\r\n        localStorage.setItem('currentUser', JSON.stringify(user));\r\n        //localStorage.setItem('currentUser', user.authData);\r\n        //this.currentUserSubject.next(user);\r\n        this.loggedUser = user;\r\n        this.logged = true;\r\n        this.actualUser = user;\r\n        this.actualUserName = user.username;\r\n        this.actualPass = pass;\r\n        \r\n        localStorage.setItem('loggedString' , \"true\");\r\n        localStorage.setItem('actualUserName', this.actualUserName);\r\n        localStorage.setItem('role',this.loggedUser.rol.rolDes);\r\n      })\r\n    )\r\n  }\r\n\r\n  logOut():Observable<any>{\r\n    return this.http.get<any>('/api/logOut').pipe(\r\n      catchError(error => this.handleError(error))\r\n    ) as Observable<any>\r\n  }\r\n\r\n  logOutProcedure(){\r\n    localStorage.setItem('id_token' ,'');\r\n\r\n    this.logged = false;\r\n    this.actualUser = null;\r\n    this.actualUserName = null;\r\n    this.actualPass = null;\r\n\r\n    localStorage.setItem('loggedString' , \"false\");\r\n    localStorage.setItem('actualUserName', this.actualUserName);\r\n    localStorage.setItem('role',\"\");\r\n  }\r\n\r\n  getLogged(){\r\n\r\n    var loggedS = localStorage.getItem('loggedString');\r\n\r\n    if(loggedS === \"true\"){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getActualUserName(){\r\n\r\n    var userNameString = localStorage.getItem('actualUserName');\r\n\r\n    return userNameString;\r\n  }\r\n\r\n  getUserByUserName(userName: String): Observable<User>{\r\n    return this.http.get(BASE_URL + \"name=\" + userName).pipe(\r\n      catchError(error => this.handleError(error))\r\n    )as Observable<User>;\r\n  }\r\n\r\n  createUser(user: User): Observable<User>{\r\n    return this.http.post(BASE_URL, user).pipe(\r\n      catchError(error => this.handleError(error))\r\n    )as Observable<User>;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error(error);\r\n    if(error.status === 403 || error.status === 401 || error.status === 0){\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    return throwError(\"Server error (\" + error.status + \"): \" + error.text);\r\n  }\r\n\r\n  logout() {\r\n    return this.http.get('/api/logout');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RocketleagueComponent } from \"./rocketleague/rocketleague.component\";\r\nimport { CreatetournamentComponent } from './createTournament/createtournament.component';\r\nimport { TournamentComponent } from './tournament/tournament.component';\r\nimport { TeamComponent } from './team/team.component';\r\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { InfoComponent } from './info/info.component';\r\nimport { UpdateMatchComponent } from './updateMatch/updateMatch.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { UpdateProfileComponent } from './updateProfile/updateProfile.component';\r\nimport { UserAuthGuardService, AdminAuthGuardService } from './_servicies/adminauthguard.service';\r\n\r\nconst routes = [\r\n  {path: '', component: HomeComponent },\r\n  {path: 'tournaments', component: RocketleagueComponent ,canActivate: [UserAuthGuardService]},\r\n  {path: 'login', component: LoginComponent },\r\n  {path: 'createtournament', component: CreatetournamentComponent,canActivate: [AdminAuthGuardService]},\r\n  {path: 'tournament/:idTournament', component: TournamentComponent,canActivate: [UserAuthGuardService]},\r\n  {path: 'createTeam', component: TeamComponent, canActivate: [AdminAuthGuardService] },\r\n  {path: 'leaderboard', component: LeaderboardComponent,canActivate: [UserAuthGuardService]},\r\n  {path: 'profile/:id', component: ProfileComponent},\r\n  {path: 'info', component: InfoComponent,canActivate: [UserAuthGuardService]},\r\n  {path: 'updateMatch/:idTournament/:pos', component: UpdateMatchComponent, canActivate: [AdminAuthGuardService]},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'updateProfile', component: UpdateProfileComponent,canActivate: [UserAuthGuardService]}\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(routes);\r\n// Aqui van las rutas de los componentes\r\n// Más tarde, a la hora de poner links, los links cambian el componente activo\r\n/*\r\n@NgModule({\r\n\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n*/\r\n","import { UsersService } from './_servicies/users.service';\r\nimport { User} from './models/user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./home/carousel.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'eTournaments';\r\n  userLoggued = new User;\r\n  userLoggedName: String;\r\n  userLoggedId: number;\r\n  imgWebIconUrl = \"assets/web-icon-white.png\";\r\n  \r\n  logged: boolean;\r\n  notLogged: boolean;\r\n  adminLogged: boolean;\r\n\r\n  constructor(private userService: UsersService){\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /*\r\n    this.userService.currentUser.subscribe(\r\n      response => {\r\n        let data: any = response;\r\n        this.userLoggedName = data.username;\r\n        this.userLoggedId = data.iduser;\r\n      }\r\n    );\r\n      */\r\n\r\n      this.userLoggedName = this.userService.getActualUserName();\r\n      this.logged = this.userService.getLogged();\r\n\r\n      if(this.logged){\r\n        this.notLogged = false;\r\n      }else{\r\n        this.notLogged = true;\r\n      }\r\n      \r\n      this.adminLogged = false;\r\n\r\n      if(this.userLoggedName != \"undefined\" && this.userLoggedName != \"null\" && this.userLoggedName != null){\r\n        this.setUserId(this.userLoggedName);\r\n      } \r\n      \r\n  }\r\n\r\n  isUserLogged():boolean{\r\n    return this.logged;\r\n  }\r\n  isAdminLogged():boolean{\r\n    return this.adminLogged;\r\n  }\r\n\r\n  logOut(){\r\n    this.userService.logOut().subscribe(\r\n      response => {\r\n        this.userService.logOutProcedure();\r\n        window.location.reload();\r\n      },\r\n      error => console.error('Error in logOut ' + error)\r\n    )\r\n  }\r\n\r\n  setUserId(name: String) {\r\n    this.userService.getUserByUserName(name).subscribe(\r\n      user => {\r\n        let data: any = user;\r\n        this.userLoggedId = data.iduser;\r\n        this.userLoggued = data;\r\n        if(this.userLoggued.rol.rolDes === \"ADMIN\"){\r\n          this.adminLogged = true;\r\n        }else{\r\n          this.adminLogged = false;\r\n        }\r\n      },\r\n      error => console.error('Error finding user: ' + error)\r\n    );\r\n  }\r\n\r\n  \r\n\tlogout(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.userService.logout().subscribe(\r\n\t\t\t\tres => {\r\n\t\t\t\t\t// remove user from local storage to log user out\r\n\t\t\t\t\tlocalStorage.removeItem('currentUser');\r\n\t\t\t\t\tthis.userService.currentUserSubject.next(null);\r\n\t\t\t\t\tthis.userService.logged = false;\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tconsole.log(\"marcos\");\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","<header>\r\n    <nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            <img [src]=\"imgWebIconUrl\" width=\"30\" height=\"30\" alt=\"\">\r\n        </a>\r\n        <a class=\"navbar-brand\" >eTournaments</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item active\">\r\n                    <a [routerLink]=\"['/']\" class=\"nav-link\">Home</a>\r\n                </li>\r\n                <li class=\"nav-item active\" *ngIf=\"notLogged\">\r\n                    <a [routerLink]=\"['/login']\" class=\"nav-link\">Sign in</a>\r\n                </li>\r\n                <li class=\"nav-item active\" *ngIf=\"logged\">\r\n                    <a [routerLink]=\"['/profile/',userLoggedId]\" class=\"nav-link\">{{userLoggedName}}</a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a [routerLink]=\"['/leaderboard']\" class=\"nav-link\">Leaderboard</a>\r\n                </li>\r\n                <li *ngIf=\"adminLogged\" class=\"nav-item active\">\r\n                    <a [routerLink]=\"['/createTeam']\" class=\"nav-link\">Create team</a>\r\n                </li>\r\n                <li *ngIf=\"adminLogged\" class=\"nav-item active\">\r\n                    <a [routerLink]=\"['/createtournament']\" class=\"nav-link\">Create tournament</a>\r\n                </li>\r\n            </ul>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n                <li class=\"nav-item active\" *ngIf=\"notLogged\">\r\n                    <a [routerLink]=\"['/register']\" class=\"nav-link\">Register</a>\r\n                </li>\r\n                <li class=\"nav-item active\" *ngIf=\"logged\">\r\n                    <button (click)=\"logOut()\" class=\"buttonNoBack\">Log out</button>\r\n                </li>\r\n            </ul>\r\n        </div>        \r\n    </nav>\r\n</header>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; \r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsersService } from './_servicies/users.service';\r\nimport { RocketleagueComponent } from './rocketleague/rocketleague.component';\r\nimport { TeamComponent } from './team/team.component';\r\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\r\nimport { routing } from './app-routing.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CreatetournamentComponent } from './createTournament/createtournament.component';\r\nimport { TournamentComponent } from './tournament/tournament.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UpdateMatchComponent } from './updateMatch/updateMatch.component';\r\nimport { AuthInterceptor } from './_servicies/auth.interceptor';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { UpdateProfileComponent } from './updateProfile/updateProfile.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { UserAuthGuardService, AdminAuthGuardService} from './_servicies/adminauthguard.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RocketleagueComponent,\r\n    CreatetournamentComponent,\r\n    TournamentComponent,\r\n    TeamComponent,\r\n    LeaderboardComponent,\r\n    UpdateMatchComponent,\r\n    RegisterComponent,\r\n    UpdateProfileComponent,\r\n    ProfileComponent\r\n    \r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    routing\r\n  ],\r\n  providers: [\r\n    UserAuthGuardService,\r\n    AdminAuthGuardService,\r\n    UsersService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n    \r\n  ],\r\n  exports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    RouterModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n\r\n }\r\n","import { Component } from '@angular/core';\r\n\r\nimport { TournamentService } from '../_servicies/tournament.service';\r\n\r\nimport { Tournament } from '../models/tournament.model';\r\n\r\n@Component({\r\n    selector: 'createtournament',\r\n    templateUrl:'./createtournament.component.html',\r\n    styleUrls: ['./teamCreation.component.css', './style.component.css']\r\n})\r\n\r\nexport class CreatetournamentComponent{\r\n    tournament = new Tournament;\r\n\r\n    constructor(private tournamentService: TournamentService){}\r\n   \r\n    save(){\r\n        this.tournamentService.addTournament(this.tournament).subscribe(\r\n            _ => {\r\n                window.history.back();\r\n            },\r\n            error => console.error('Error creating new tournament: ' + error)\r\n        );\r\n        \r\n    }\r\n}","<html>\r\n\r\n<head>\r\n<link href=\"/core/bootstrap.min.css\" rel=\"stylesheet\">\r\n<link href=\"/css/TeamCreation/teamCreation_files/style.css\"\r\n\trel=\"stylesheet\">\r\n<link href=\"/css/TeamCreation/teamCreation_files/teamCreation.css\"\r\n\trel=\"stylesheet\">\r\n</head>\r\n\r\n<body>\r\n\t\r\n\t<div class=\"container\">\r\n\r\n\t\t<form class=\"well form-horizontal\" #tournamentForm=\"ngForm\">\r\n\t\t\t<fieldset>\r\n\t\t\t\t\r\n\t\t\t\t<br>\r\n\t\t\t\t<br>\r\n\t\t\t\t<br>\r\n\t\t\t\t<br>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Form Name -->\r\n\r\n\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t<b>Create tournament</b>\r\n\t\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Tournament name</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"tournament.name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Your tournament name here\" class=\"form-control\" name=\"name\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Number of teams</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"tournament.numTeams\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Number of teams here\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\" name=\"numTeams\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Description</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"tournament.description\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Description here\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\" type=\"text\" name=\"description\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Latitude of the location</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"tournament.latitude\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Latitude here\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\" type=\"number\" name=\"latitude\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Longitude of the location</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"tournament.longitude\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Longitude here\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\" type=\"number\" name=\"longitude\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br>\r\n\t\t\t\t<!-- Button -->\r\n\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t<button class=\"button\" (click)=\"save()\">Submit</button>\r\n\t\t\t\t\t<!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\">-->\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\r\n\t</div>\r\n\t<script src=\"/core/jquery-3.4.1.slim.min.js\"></script>\r\n\t<script src=\"/core/bootstrap.bundle.min.js\"></script>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./carousel.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  imgCarr1Url = \"assets/main1.jpg\";\r\n  imgCarr2Url = \"assets/main2.jpg\";\r\n  imgCarr3Url = \"assets/main3.png\";\r\n  imgRlIcon = \"assets/rl-icon.jpg\";\r\n  imgLeaderboard = \"assets/leaderboardLogo.png\";\r\n  imgUserLogo = \"assets/userLogo.png\";\r\n  imgWebIconUrl = \"assets/web-icon-white.png\";\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n<meta name=\"viewport\"\r\n\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n<meta name=\"generator\" content=\"Jekyll v3.8.6\">\r\n<title>eTorneos - Home</title>\r\n</head>\r\n\r\n<body>\r\n\r\n\t<main role=\"main\">\r\n\t\t<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\"\r\n\t\t\tdata-interval=\"5000\">\r\n\t\t\t<div class=\"carousel-inner\">\r\n\t\t\t\t<div class=\"carousel-item active\">\r\n\t\t\t\t\t<img [src]=\"imgCarr1Url\" class=\"d-block w-100\" alt=\"...\">\r\n\t\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t\t<div class=\"carousel-caption text-right\">\r\n\t\t\t\t\t\t\t<h1>Exciting tournaments</h1>\r\n\t\t\t\t\t\t\t<p>Play competitively with your friends in Rocket League\r\n\t\t\t\t\t\t\t\tmatches.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"carousel-item\">\r\n\t\t\t\t\t<img [src]=\"imgCarr2Url\" class=\"d-block w-100\" alt=\"...\">\r\n\t\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t\t<div class=\"carousel-caption text-right\">\r\n\t\t\t\t\t\t\t<h1>Win prizes</h1>\r\n\t\t\t\t\t\t\t<p>Win awesome prizes in a variety of different tournaments.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div class=\"carousel-item\">\r\n\t\t\t\t\t<img [src]=\"imgCarr3Url\" class=\"d-block w-100\" alt=\"...\">\r\n\t\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t\t<div class=\"carousel-caption text-right\">\r\n\t\t\t\t\t\t\t<h1>Show your skills</h1>\r\n\t\t\t\t\t\t\t<p>The best teams will be in our leaderboard.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<div class=\"container marketing\">\r\n\r\n\t\t\t<!-- Three columns of text below the carousel -->\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-lg-4\">\r\n\t\t\t\t\t<img [src]=\"imgRlIcon\" class=\"\" width=\"140\" height=\"140\"\r\n\t\t\t\t\t\tpreserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\r\n\t\t\t\t\t<title>Rocket League</title>\r\n\t\t\t\t\t<h2>Rocket League</h2>\r\n\t\t\t\t\t<p>Play with your team in incredible tournaments.</p>\r\n\t\t\t\t\t<input type=\"submit\" [routerLink]=\"['/tournaments']\" class=\"button\" value=\"View tournaments\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- /.col-lg-4 -->\r\n\t\t\t\t<div class=\"col-lg-4\">\r\n\t\t\t\t\t<img [src]=\"imgLeaderboard\" class=\"\" width=\"140\"\r\n\t\t\t\t\t\theight=\"140\" preserveAspectRatio=\"xMidYMid slice\"\r\n\t\t\t\t\t\tfocusable=\"false\" role=\"img\">\r\n\t\t\t\t\t<title>Leaderboard</title>\r\n\t\t\t\t\t<h2>Leaderboard</h2>\r\n\t\t\t\t\t<p>See the very best teams that have taken part in tournaments.</p>\r\n\t\t\t\t\t<input type=\"submit\" [routerLink]=\"['/leaderboard']\" class=\"button\" value=\"View leaderboard\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- /.col-lg-4 -->\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"col-lg-4\">\r\n\t\t\t\t\t<img [src]=\"imgUserLogo\" class=\"\" width=\"140\"\r\n\t\t\t\t\t\theight=\"140\" preserveAspectRatio=\"xMidYMid slice\"\r\n\t\t\t\t\t\tfocusable=\"false\" role=\"img\">\r\n\t\t\t\t\t<title>Register</title>\r\n\t\t\t\t\t<h2>Register</h2>\r\n\t\t\t\t\t<p>Still not have an account? Make an account to start playing.</p>\r\n\t\t\t\t\t<input type=\"submit\" [routerLink]=\"['/register']\" class=\"button\" value=\"Register\">\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- /.col-lg-4 -->\r\n\t\t\t</div>\r\n\t\t\t<!-- /.row -->\r\n\r\n\t\t</div>\r\n\r\n\t</main>\r\n</body>\r\n</html>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\nimport {RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'info',\r\n    templateUrl:'./info.component.html',\r\n    styleUrls: ['./new-age.component.min.css']\r\n})\r\nexport class InfoComponent {\r\n    \r\n}","<html lang=\"en\">\r\n\r\n<head>\r\n\r\n<meta charset=\"utf-8\">\r\n<meta name=\"viewport\"\r\n\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n\r\n<title>Rocket League Info</title>\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n\t<header class=\"masthead\">\r\n\t\t<div class=\"container h-100\">\r\n\t\t\t<div class=\"row h-100\">\r\n\t\t\t\t<div class=\"col-lg-7 my-auto\">\r\n\t\t\t\t\t<div class=\"header-content mx-auto\">\r\n\t\t\t\t\t\t<h1 class=\"mb-5\">Rocket League: When football and cars\r\n\t\t\t\t\t\t\tcollide.</h1>\r\n\t\t\t\t\t\t<p>Rocket League is a video game that involves the combination\r\n\t\t\t\t\t\t\tof car racing and soccer, created by Psyonix. In the game,\r\n\t\t\t\t\t\t\tplayers are put into two different teams and pitted against each\r\n\t\t\t\t\t\t\tother in a futuristic arena to duke it out. Vehicles can be\r\n\t\t\t\t\t\t\tcustomized by players in numerous ways. Rocket League is the\r\n\t\t\t\t\t\t\tsequel to Supersonic Acrobatic Rocket-Powered Battle-Cars, which\r\n                            was created by the same developer.</p>\r\n                            <!--<input type=\"submit\" [routerLink]=\"['/tournaments']\" class=\"btn btn-outline btn-xl js-scroll-trigger\" value=\"Go back to Tournaments\">-->\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-5 my-auto\">\r\n\t\t\t\t\t<div class=\"device-container\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc=\"https://media.giphy.com/media/IffuxZpOBjHpPiXpaM/giphy.gif\"\r\n\t\t\t\t\t\t\tclass=\"img-fluid\" alt=\"\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</header>\r\n\r\n\t<script src=\"/core/jquery-3.4.1.slim.min.js\"></script>\r\n\t<script src=\"/core/bootstrap.bundle.min.js\"></script>\r\n\r\n</body>\r\n</html>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { TeamsService } from '../_servicies/teams.service';\r\n\r\nimport { Team } from '../models/team.model';\r\n\r\ndeclare var loaderLeaderboard: any;\r\n\r\nfunction delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n}\r\n\r\n@Component({\r\n    selector: 'leaderboard',\r\n    templateUrl: './leaderboard.component.html',\r\n    styleUrls: ['./style.component.css']\r\n})\r\n\r\n\r\n\r\nexport class LeaderboardComponent {\r\n\r\n    teamsList = new Array<Team>();\r\n    pageCounter=0;\r\n    pos = 1;\r\n\r\n    allShown = false;\r\n\r\n    constructor(private teamsService: TeamsService){\r\n        this.showMore();\r\n\r\n    }\r\n\r\n    showMore(){\r\n        loaderLeaderboard.loadSpinner();\r\n        this.teamsService.getTeams(this.pageCounter).subscribe(\r\n            response => {\r\n                response.forEach( element =>{\r\n                    if(element.elo!=0){\r\n                        element.pos=this.pos++;\r\n                        this.teamsList.push(element);\r\n                    }\r\n                })\r\n                /*this.teamsList = response;\r\n                this.teamsList.forEach(element => {\r\n                    if(element.elo!=0){\r\n                        loaderLeaderboard.fn(this.pos++,element);\r\n                    }\r\n                });*/\r\n                \r\n                this.pageCounter++;\r\n            },\r\n            error => {\r\n                this.allShown=true;\r\n                console.error('Error getting teams: ' + error) \r\n                }\r\n        )\r\n        loaderLeaderboard.unloadSpinner();       \r\n    }\r\n    \r\n\r\n}","<html>\r\n\r\n<!--\r\n<head>\r\n<link href=\"/core/bootstrap.min.css\" rel=\"stylesheet\">\r\n<link href=\"/css/Leaderboard/style.css\" rel=\"stylesheet\">\r\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n\r\n<script>\r\n\r\nvar csrf=\"{{token}}\"\r\n\r\n</script>\r\n\r\n<script src=\"/js/Leaderboard/load.js\"></script>\r\n<script\r\n\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.3.0/mustache.min.js\"></script>\r\n\r\n\r\n</head>\r\n\r\n-->\r\n\r\n<body class=\"hm-gradient\">\r\n\r\n\t<main>\r\n\t\t<div class=\"card mb-4\">\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<!-- Grid row -->\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<!-- Grid column -->\r\n\t\t\t\t\t<div class=\"col-md-12\">\r\n\t\t\t\t\t\t<h2 class=\"pt-5 pb-4 text-center font-bold font-up\">Leaderboard</h2>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- Grid column -->\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- Grid row -->\r\n\t\t\t\t<!--Table-->\r\n\t\t\t\t<table class=\"table table-striped\">\r\n\t\t\t\t\t<!--Table head-->\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t<th>Elo</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<!--Table head-->\r\n\t\t\t\t\t<!--Table body-->\r\n\t\t\t\t\t<tbody id=\"table\">\r\n\t\t\t\t\t\t<tr *ngFor=\"let elem of teamsList\">\r\n\t\t\t\t\t\t\t<th scope=\"row\">{{elem.pos}}</th>\r\n\t\t\t\t\t\t\t<td>{{elem.name}}</td>\r\n\t\t\t\t\t\t\t<td>{{elem.elo}}</td>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<!--Table body-->\r\n\t\t\t\t</table>\r\n\t\t\t\t<!--Table-->\r\n\t\t\t\t<!--Bottom Table UI-->\r\n\r\n\t\t\t\t<div id='loader' class=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<!--Pagination -->\r\n                    \r\n\t\t\t\t\t<button *ngIf=\"allShown==false\" class=\"button\" (click)=\"showMore()\" >Load more</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!--/Pagination -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </main>\r\n    <!-- \r\n    <script src=\"/core/bootstrap.min.js\"></script>\r\n\r\n    -->\r\n\t\r\n\r\n</body>\r\n\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport {UsersService} from '../_servicies/users.service'\r\n\r\n//import { AlertService, AuthenticationService } from '@/_services';\r\n\r\n@Component({ \r\n    selector: 'login',\r\n    templateUrl: 'login.component.html',\r\n    styleUrls: ['./signin.component.css']\r\n   })\r\nexport class LoginComponent implements OnInit {\r\n   \r\n    credentials = new FormGroup({\r\n    username: new FormControl(''),\r\n    password: new FormControl(''),\r\n    });\r\n    message = ('');\r\n    wrongInput: string = ('qwrong Input');\r\n    emptyPassword: string;\r\n    emptyUsername: string;\r\n    error: boolean;\r\n    returnUrl:string;\r\n\r\n    loggedIn: boolean;\r\n    notLoggedIn: boolean;\r\n\r\n    imgWebIconUrl =\"assets/web-icon-black.png\";\r\n     \r\n    constructor(public userService: UsersService, public router: Router, public route:ActivatedRoute) {\r\n        \r\n     }\r\n\r\n      login(username: string, password: string, event: Event) {\r\n\r\n        if(this.credentials.controls.username.value == ('')){\r\n            return\r\n        }\r\n        if (this.credentials.controls.password.value == ('')) {\r\n            return\r\n        }\r\n        this.userService.login(username, password,false).subscribe(\r\n            res => {\r\n              this.loggedIn = true;\r\n              this.notLoggedIn = false;\r\n              this.navigate();\r\n            },\r\n            error => {\r\n              this.error = true;\r\n              this.message = \"Wrong data.\";\r\n              console.error(error);\r\n            }\r\n          );\r\n    \r\n        }\r\n   \r\n    ngOnInit() {\r\n        this.error = false;\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';//tocar esto\r\n   \r\n    }\r\n    navigate() {\r\n        this.router.navigate([this.returnUrl]);\r\n        //window.history.back();\r\n        window.location.reload();\r\n      }\r\n\r\n    // convenience getter for easy access to form fields\r\n\r\n\r\n  \r\n}","<!DOCTYPE html>\r\n<!-- saved from url=(0051)https://getbootstrap.com/docs/4.4/examples/sign-in/ -->\r\n<html lang=\"en\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n\r\n<meta name=\"viewport\"\r\n\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n<meta name=\"description\" content=\"\">\r\n<meta name=\"author\"\r\n\tcontent=\"Mark Otto, Jacob Thornton, and Bootstrap contributors\">\r\n<meta name=\"generator\" content=\"Jekyll v3.8.6\">\r\n\r\n<title>Signin Template</title>\r\n\r\n</head>\r\n<body class=\"text-center\">\r\n\t\r\n\t<div class=\"center\">\r\n\r\n\t\t<form class=\"form-signin\" action=\"/login\" [formGroup]=\"credentials\">\r\n\r\n\t\t\t<img class=\"mb-4\" [src]=\"imgWebIconUrl\" alt=\"\" width=\"72\" height=\"72\">\r\n\t\t\t\t\r\n\t\t\t<h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n\t\t\t\r\n\t\t\t<label for=\"inputEmail\" class=\"sr-only\">Email address</label>\r\n\t\t\t<input class=\"form-control\" #username formControlName=\"username\" id=\"username\" name=\"username\" placeholder=\"Email\" type=\"text\">    \r\n\t\t\t\t\t\r\n\t\t\t<label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n\t\t\t\t\r\n\t\t\t<input class=\"form-control\" #password formControlName=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\t\t\t\t\r\n\t\t\t<button class=\"button\" (click)=\"login(username.value, password.value, $event)\" type=\"submit\">Log in</button>\r\n\t\t\t\r\n\t\t</form>\r\n\t\r\n\t</div>\r\n\r\n</body>\r\n</html>","export class Play{\r\n    round: string;\r\n    name1: string;\r\n    elo1: number;\r\n    name2: string;\r\n    elo2: number;\r\n    date: string;\r\n    nameWinner: string;\r\n    pos: number;\r\n}","export class Rol{\r\n    idRol: number;\r\n    rolDes: string;\r\n}","export class Team{\r\n    idTeam: number;\r\n    id?:number;\r\n    name: string;\r\n    elo: number;\r\n    wins: number;\r\n    losses: number;\r\n    pos: number;\r\n}","export class Tournament{\r\n    idTournament: number;\r\n    numTeams: number;\r\n    name: string;\r\n    description: string;\r\n    img?: string;\r\n    latitude: number;\r\n    longitude: number;\r\n}","import { Player } from './player.model';\r\nimport { User } from './user.model';\r\n\r\nexport class UserPlayerWrapper {\r\n\tuser:User;\r\n\tdescription:string;\r\n}","import { Rol } from './rol.model';\r\n\r\nexport class User {\r\n    iduser: number;\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    rol: Rol;\r\n    firstName: string;\r\n    lastName: string;\r\n    token: string;\r\n    \r\n}","import { Component } from '@angular/core';\r\n\r\nimport { ProfileService } from '../_servicies/profile.service';\r\nimport { Player } from '../models/player.model';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PlayersService } from '../_servicies/players.service';\r\nimport { Team } from '../models/team.model';\r\nimport { UsersService } from '../_servicies/users.service';\r\nimport { User } from '../models/user.model';\r\n\r\nconst BASE_URL = '/api/player/';\r\ndeclare var loadPie: any;\r\n\r\n@Component({\r\n    selector: 'profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.css']\r\n})\r\n\r\nexport class ProfileComponent{\r\n    id:number;\r\n    player : Player;\r\n    imgUrl:string;\r\n    username:string = \"\";\r\n    description:string =\"\";\r\n    teamName:string = \"\";\r\n    wins:number;\r\n    losses:number;\r\n    team :Team;\r\n\r\n    constructor(private profileService:ProfileService,private router: Router,\r\n        activatedRoute: ActivatedRoute, private usersService: UsersService, private playersService: PlayersService) {\r\n        this.id = activatedRoute.snapshot.params['id'];\r\n        \r\n\r\n        \r\n    }\r\n    ngOnInit(){\r\n        //loadPie.fn(this.player.team.losses,this.player.team.wins);\r\n        this.imgUrl =  '/api/user/' + this.id + '/image';\r\n        this.profileService.getPlayerByUserId(this.id).subscribe(\r\n            response => {\r\n                this.player = response;\r\n                this.username= this.player.user.username;\r\n                if (this.player.team!=null){\r\n                    this.teamName= this.player.team.name;\r\n                }\r\n                if (this.player.description!=null){\r\n                    this.description = this.player.description;\r\n                }\r\n                loadPie.fn(this.team.losses,this.team.wins);\r\n            },\r\n            error => console.error('Error')\r\n        );\r\n\r\n    }\r\n\r\n    buildHtml(idUser:number){\r\n        this.profileService.getPlayerByUserId(this.id).subscribe\r\n\r\n    }\r\n\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n\r\n<head>\r\n<title>Profile</title>\r\n<meta charset=\"UTF-8\">\r\n\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n<!-- Scripts -->\r\n<script src=\"/js/Profile/jquery-2.1.4.min.js\"></script>\r\n<script src=\"/js/Profile/bootstrap.min.js\"></script>\r\n<script src=\"/js/Profile/mdb.js\"></script>\r\n<script src=\"/js/Profile/pie.js\"></script>\r\n\r\n\r\n</head>\r\n\r\n<body>\r\n\t<!-- Page Preloder -->\r\n\t<!--<div id=\"preloder\">\r\n\t\t<div class=\"loader\"></div>\r\n\t</div>-->\r\n\r\n\t<!-- Header section start -->\r\n\r\n\t<header class=\"header-section\">\r\n\t\t<div class=\"container-fluid\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-md-8 text-md-right header-buttons\">\r\n\t\t\t\t\t<!--\r\n\t\t\t\t\t<a href=\"/teamCreation\" class=\"site-btn\">Create Team</a>\r\n\t\t\t\t\t-->\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</header>\r\n\r\n\t<!-- Header section end -->\r\n\r\n\t<!-- Hero section start -->\r\n\t<section class=\"hero-section spad\">\r\n\t\t<div class=\"container-fluid\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-xl-10 offset-xl-1\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t\t\t\t<div class=\"hero-text\">\r\n\t\t\t\t\t\t\t\t<h2>{{username}}</h2>\r\n\t\t\t\t\t\t\t\t<p>{{description}}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"hero-info\">\r\n\t\t\t\t\t\t\t\t<h2>Team: {{teamName}}</h2>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" [routerLink]=\"['/updateProfile']\" class=\"button\" value=\"Edit profile\">\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t\t\t\t<figure class=\"hero-image\">\r\n\t\t\t\t\t\t\t\t<img  alt=\"5\" src=\"{{imgUrl}}\">\r\n\t\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"container my-4\">\r\n\t\t\t\t\t\t\t<hr class=\"my-4\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<canvas id=\"pieChart\"></canvas>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</section>\r\n\r\n\t<!--====== Javascripts & Jquery ======-->\r\n\r\n\t<script src=\"/js/Profile/owl.carousel.min.js\"></script>\r\n\t<script src=\"/js/Profile/magnific-popup.min.js\"></script>\r\n\t<script src=\"/js/Profile/circle-progress.min.js\"></script>\r\n\t<script src=\"/js/Profile/main.js\"></script>\r\n\t</body>\r\n</html>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { UsersService } from '../_servicies/users.service';\r\n\r\nimport { User } from '../models/user.model';\r\nimport { Rol } from '../models/rol.model';\r\n\r\nconst BASE_URL = '/api/user/';\r\n\r\n@Component({\r\n    selector: 'register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n    user = new User;\r\n    rol = new Rol;\r\n    password: String;\r\n    notEqualPass: boolean = false;\r\n\r\n    constructor(private usersService: UsersService){}\r\n\r\n    send(name: string, email: string, username: string, userpassword: string, password: string){\r\n        if(userpassword === password){\r\n            this.notEqualPass = false;\r\n\r\n            this.user.name = name;\r\n            this.user.username = username;\r\n            this.user.email = email;\r\n            this.user.password = userpassword;\r\n            this.rol.idRol = 2;\r\n            this.rol.rolDes = 'USER';\r\n            this.user.rol = this.rol;\r\n\r\n            this.usersService.createUser(this.user).subscribe(\r\n                response =>{\r\n                    window.history.back();\r\n                },\r\n                error => console.error('Error creating new user: ' + error)\r\n                \r\n            );\r\n\r\n        }else{\r\n            this.notEqualPass = true;\r\n        }\r\n    }\r\n\r\n}","<html lang=\"en\">\r\n<head>\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n\t<div class=\"container p-5 pt-5\">\r\n\t<br>\r\n\t<br>\r\n\t<br>\r\n\t<br>\r\n\t<br>\r\n\t<br>\r\n\t<br>\r\n\t\r\n\t\t<div class=\"row justify-content-center\">\r\n\t\t\t<div class=\"col-md-8\">\r\n\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t<form>\r\n\r\n\t\t\t\t\t\t\t<h2 *ngIf=\"notEqualPass\">Passwords are not equal</h2>\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"name\" class=\"cols-sm-2 control-label\">Your name</label>\r\n\t\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-user fa\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" #name class=\"form-control\" placeholder=\"Insert your name\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"email\" class=\"cols-sm-2 control-label\">Your e-mail</label>\r\n\t\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-envelope fa\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" #email class=\"form-control\" placeholder=\"Insert your Email\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"username\" class=\"cols-sm-2 control-label\">Username</label>\r\n\t\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-users fa\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" #username class=\"form-control\" placeholder=\"Enter your Username\" /> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"password\" class=\"cols-sm-2 control-label\">Password</label>\r\n\t\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"password\" #userpassword class=\"form-control\" placeholder=\"Enter your Password\"/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"confirm\" class=\"cols-sm-2 control-label\">Confirm password</label>\r\n\t\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"password\" #password class=\"form-control\" placeholder=\"Confirm your Password\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"form-group \">\r\n\t\t\t\t\t\t\t\t<button (click)=\"send(name.value, email.value, username.value, userpassword.value, password.value)\" class=\"button\">Register</button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n</body>\r\n</html>","import { Component } from '@angular/core';\r\n\r\nimport { RocketleagueService } from '../_servicies/rocketleague.service';\r\n\r\nimport { Tournament } from '../models/tournament.model';\r\n\r\n@Component({\r\n    selector: 'rocketleague',\r\n    templateUrl:'./rocketleague.component.html',\r\n    styleUrls: ['./landing-page.component.min.css']\r\n})\r\n\r\nexport class RocketleagueComponent{\r\n    tournaments = new Array<Tournament>();\r\n\r\n    imgSteamIconUrl = \"assets/steam-Icon.png\";\r\n    imgTwitchIconUrl = \"assets/twitch-icon.png\";\r\n    imgInfoIconUrl = \"assets/info-icon.png\";\r\n    imgDefaultTournamentUrl = \"assets/defaultTournament.png\";\r\n    imgBackgroundUrl = \"assets/bg-rocketLeague.jpg\";\r\n\r\n\r\n    constructor(private rocketleagueService: RocketleagueService){\r\n       \r\n    }\r\n    ngOnInit(){\r\n        this.tournamentsOnHtml(); \r\n    }\r\n    \r\n    tournamentsOnHtml(){\r\n        this.rocketleagueService.getTournaments().subscribe(\r\n            respuesta => { \r\n                let data: any = respuesta;\r\n                for(var i = 0; i < data.length; i++){\r\n                    this.tournaments.push(data[i]);\r\n                }\r\n            },\r\n        )\r\n    }\r\n    \r\n}","<html lang=\"en\">\r\n\r\n<head>\r\n\r\n<meta charset=\"utf-8\">\r\n<meta name=\"viewport\"\r\n\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n\r\n<title>Rocket League</title>\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n\t<!-- Masthead -->\r\n\t<header class=\"masthead text-white text-center\">\r\n\t\t<div class=\"overlay\"></div>\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-xl-9 mx-auto\">\r\n\t\t\t\t\t<h1 class=\"mb-5\">TOURNAMENTS</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</header>\r\n\r\n\t<!-- Icons Grid -->\r\n\t<section class=\"features-icons bg-light text-center\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-lg-4\">\r\n\t\t\t\t\t<div class=\"features-icons-item mx-auto mb-5 mb-lg-0 mb-lg-3\">\r\n\t\t\t\t\t\t<i><a\r\n\t\t\t\t\t\t\thref=\"https://store.steampowered.com/app/252950/Rocket_League/\"><img\r\n\t\t\t\t\t\t\t\t[src]=\"imgSteamIconUrl\" alt=\"Steam\"\r\n\t\t\t\t\t\t\t\theight=\"200px\" width=\"200px\" /></a></i>\r\n\t\t\t\t\t\t<h3>Download Rocket League on Steam</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-4\">\r\n\t\t\t\t\t<div class=\"features-icons-item mx-auto mb-5 mb-lg-0 mb-lg-3\">\r\n\t\t\t\t\t\t<i><a\r\n\t\t\t\t\t\t\thref=\"https://www.twitch.tv/directory/game/Rocket%20League\"><img\r\n\t\t\t\t\t\t\t\t[src]=\"imgTwitchIconUrl\" alt=\"Twitch\" height=\"200px\"\r\n\t\t\t\t\t\t\t\twidth=\"200px\"></a></i>\r\n\t\t\t\t\t\t<h3>See on Twitch</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-4\">\r\n\t\t\t\t\t<div class=\"features-icons-item mx-auto mb-0 mb-lg-3\">\r\n\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<input type=\"image\" [routerLink]=\"['/info']\" [src]=\"imgInfoIconUrl\"\r\n\t\t\t\t\t\t\t\t\twidth=\"200px\" height=\"200px\" alt=\"Info\">\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t<h3>Get more information about this game</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</section>\r\n\r\n\t<!-- Image Showcases -->\r\n\t<section class=\"showcase\">\r\n\t\t<div class=\"container-fluid p-0\">\r\n\t\t\t<div class=\"row no-gutters\" *ngFor=\"let elem of tournaments\">\r\n\t\t\t\t<div class=\"col-lg-6 text-white showcase-img\" >\r\n\t\t\t\t\t<img [src]=\"imgDefaultTournamentUrl\" height=\"500px\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-6 my-auto showcase-text\">\r\n\t\t\t\t\t<h2>{{elem.name}}</h2>\r\n\t\t\t\t\t<p class=\"lead mb-0\">{{elem.description}}</p>\r\n                    <div style=\"text-align: center\">\r\n\t\t\t\t\t\t<form [routerLink]=\"['/tournament/',elem.idTournament]\">\r\n\t\t\t\t\t\t\t<input  type=\"submit\" class=\"button\" value=\"Go to tournament\">\r\n\t\t\t\t\t\t\t<!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\">-->\r\n\t\t\t\t\t\t</form>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            \r\n\t\t</div>\r\n\t</section>\r\n</body>\r\n</html>","import { Component } from '@angular/core';\r\n\r\nimport { TeamsService } from '../_servicies/teams.service';\r\nimport { UsersService } from '../_servicies/users.service';\r\nimport { PlayersService } from '../_servicies/players.service';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Team } from '../models/team.model';\r\nimport { Player } from '../models/player.model';\r\nimport { User } from '../models/user.model';\r\n\r\n@Component({\r\n    selector: 'team',\r\n    templateUrl: './team.component.html',\r\n    styleUrls: ['./style.component.css', './teamCreation.component.css']\r\n})\r\nexport class TeamComponent {\r\n    team = new Team;\r\n    player: Player;\r\n    user1 = new User;\r\n    user2 = new User;\r\n    user3 = new User;\r\n    contUser = 0;\r\n    saved = false;\r\n    notSaved = true;\r\n\r\n    constructor(private http: HttpClient ,private teamsService: TeamsService, private usersService: UsersService, private playersService: PlayersService){}\r\n\r\n    save() {\r\n        this.teamsService.addTeam(this.team).subscribe(\r\n            team => { \r\n                let data: any = team;\r\n                let idTeam = data.id;\r\n                this.readUser(idTeam);\r\n            },\r\n            error => console.error('Error creating new Team: ' + error)\r\n        );\r\n    }\r\n\r\n    readUser(idTeam: number){\r\n        this.usersService.getUserByUserName(this.user1.username).subscribe(\r\n            user => {\r\n                let data: any = user;\r\n                let idUser = data.iduser;\r\n                this.changePlayerTeam(idUser);\r\n            },\r\n            error => console.error('Error finding user ' + error)\r\n        );\r\n\r\n        this.usersService.getUserByUserName(this.user2.username).subscribe(\r\n            user => {\r\n                let data: any = user;\r\n                let idUser = data.iduser;\r\n                this.changePlayerTeam(idUser);\r\n            },\r\n            error => console.error('Error finding user ' + error)\r\n        );\r\n\r\n        this.usersService.getUserByUserName(this.user3.username).subscribe(\r\n            user => {\r\n                let data: any = user;\r\n                let idUser = data.iduser;\r\n                this.changePlayerTeam(idUser);\r\n            },\r\n            error => console.error('Error finding user ' + error)\r\n        );\r\n    }\r\n\r\n    changePlayerTeam(idUser: number){\r\n        this.playersService.getPlayerByUserId(idUser).subscribe(\r\n            player => {\r\n                let data: any = player;\r\n                let idPlayer = data.idPlayer;\r\n                this.changeTeam(idPlayer, this.team);\r\n            },\r\n            error => console.error('Error finding player ' + error)\r\n        );\r\n    }\r\n\r\n    changeTeam(idPlayer: number, team: Team){\r\n        this.playersService.updatePlayerTeam(idPlayer, team).subscribe(\r\n            player =>{\r\n                this.contUser++;\r\n                if(this.contUser === 3){\r\n                    this.saved = true;\r\n                    this.notSaved = false;\r\n                }\r\n            },\r\n            error => console.error('Error updating team ' + error)\r\n        );\r\n    }\r\n\r\n}","<body>\r\n\r\n\t<div class=\"container\">\r\n\r\n\t\t\t<fieldset>\r\n\t\t\t\t\r\n\t\t\t\t<br>\r\n\t\t\t\t<br>\r\n\t\t\t\t<br>\r\n\t\t\t\t<br>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Form Name -->\r\n\r\n\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t<b>Create team</b>\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<br>\r\n\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Team name</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"team.name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Your team name here\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">First player</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"user1.username\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username of first player\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Second player</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"user2.username\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username of secon player\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- Text input-->\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label class=\"col-md-4 control-label\">Third player</label>\r\n\t\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i\r\n\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i></span> <input [(ngModel)]=\"user3.username\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username of third player\"\r\n\t\t\t\t\t\t\t\tclass=\"form-control\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<br>\r\n\t\t\t\t<!-- Button -->\r\n\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t<button *ngIf=\"notSaved\" class=\"button\" (click)=\"save()\">Submit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h3 *ngIf=\"saved\">Team created</h3> \r\n\r\n\t\t\t\t<div class=\"col-md-4 inputGroupContainer\">\r\n\t\t\t\t\t<button *ngIf=\"saved\" class=\"button\" [routerLink]=\"['/']\">Go to home</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</fieldset>\r\n\r\n    </div>\r\n\r\n</body>","import { Component } from '@angular/core';\r\n\r\nimport { Play } from '../models/play.model';\r\n\r\nimport { TournamentService } from '../_servicies/tournament.service';\r\nimport { PlayersService } from '../_servicies/players.service';\r\nimport { Tournament } from '../models/tournament.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Team } from '../models/team.model';\r\nimport { UsersService } from '../_servicies/users.service';\r\n\r\nconst GOOGLE_API = \"https://maps.googleapis.com/maps/api/js?sensor=false\";\r\nconst GOOGLE_SCRIPT = \"../assets/js/googleMap.js\";\r\n\r\ndeclare var loadMap: any;\r\n\r\n@Component({\r\n    selector: 'tournament',\r\n    templateUrl:'./tournament.component.html',\r\n    styleUrls: ['./diamonds-tournament-style.component.css']\r\n})\r\n\r\n\r\n\r\nexport class TournamentComponent{\r\n    play = new Play;\r\n    tournament = new Tournament;\r\n    idTournament:number;\r\n    nameTournament: string;\r\n    plays = new Array<Play>();\r\n    team = new Team;\r\n    username: string;\r\n\r\n    loadAPI0: Promise<any>;\r\n    loadAPI: Promise<any>;\r\n    loadAPI2: Promise<any>;\r\n\r\n\r\n    constructor(private usersService: UsersService, private tournamentService: TournamentService, private playersService: PlayersService, private router:Router, activatedRoute: ActivatedRoute){\r\n        this.idTournament=activatedRoute.snapshot.params['idTournament'];\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.tournamentService.getPlays(this.idTournament).subscribe(\r\n           play => {\r\n               let data: any = play;\r\n               for(var i = 0; i < data.length; i++){\r\n                    data[i].pos = i + 1;\r\n                    this.plays.push(data[i]);\r\n                    console.log(\"pera\");\r\n               }\r\n           },\r\n           error => console.error('Error finding plays' + error)\r\n        );\r\n\r\n        this.getTournament(this.idTournament);\r\n\r\n    }\r\n\r\n    getTournament(id: number){\r\n        this.tournamentService.getTournamentById(this.idTournament).subscribe(\r\n            tournament => {\r\n                let data: any = tournament;\r\n                this.tournament.name = data.name;\r\n                this.tournament.numTeams = data.numTeams;\r\n                this.tournament.latitude = data.latitude;\r\n                this.tournament.longitude = data.longitude;\r\n                loadMap.func1(this.tournament.latitude, this.tournament.longitude);\r\n            },\r\n            error => console.error('Error finding tournament' + error)\r\n        );\r\n    }\r\n\r\n    addTeamToTournament(){\r\n\r\n        this.username = this.usersService.getActualUserName();\r\n\r\n        this.usersService.getUserByUserName(this.username).subscribe(\r\n            usr =>{\r\n                this.playersService.getPlayerByUserId(usr.iduser).subscribe(\r\n                    plyr =>{\r\n                        this.team = plyr.team;\r\n                        this.joinTournament();\r\n                        \r\n                    },\r\n                    error => {\r\n                        console.error('Error finding player' + error)\r\n                    }\r\n                )\r\n            },\r\n            error => {\r\n                console.error('Error finding user' + error)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    joinTournament(){\r\n        this.tournamentService.joinTournament(this.idTournament, this.team).subscribe(\r\n            _ => {\r\n                window.location.reload();\r\n            },\r\n            error => console.error('Error joining tournament: ' + error)\r\n        );\r\n    }\r\n\r\n}","<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n\r\n<link\r\n\thref=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\"\r\n\trel=\"stylesheet\">\r\n<link href='https://fonts.googleapis.com/css?family=Holtwood+One+SC'\r\n\trel='stylesheet' type='text/css'>\r\n<link\r\n\thref='https://fonts.googleapis.com/css?family=Kaushan+Script|Herr+Von+Muellerhoff'\r\n\trel='stylesheet' type='text/css'>\r\n<link href='https://fonts.googleapis.com/css?family=Abel'\r\n\trel='stylesheet' type='text/css'>\r\n<link\r\n\thref='https://fonts.googleapis.com/css?family=Istok+Web|Roboto+Condensed:700'\r\n\trel='stylesheet' type='text/css'>\r\n\r\n<title>Diamonds Tournament</title>\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n\t<header class=\"hero\">\r\n\t\t<div class=\"hero-wrap\">\r\n\t\t\t<p class=\"intro\" id=\"intro\">Rocket League</p>\r\n\t\t\t<h1 id=\"headline\">{{tournament.name}}</h1>\r\n\t\t\t<p class=\"year\">2020</p>\r\n\t\t\t<div style=\"text-align: center;\">\r\n\t\t\t<form>\r\n\t\t\t\t<input type=\"submit\" class=\"button\" value=\"Join Tournament\" (click)=\"addTeamToTournament()\"> \r\n\t\t\t\t<!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\" />\r\n\t\t\t\t<input type=\"hidden\" name=\"torunament\" value=\"{{name}}\" />-->\r\n\t\t\t</form> \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</header>\r\n\r\n\r\n\t<div class=\"d-flex justify-content-center\">\r\n\t\t<div id=\"map_container\"></div>\r\n\t</div>\r\n\r\n\t<main>\r\n\t\t<div class=\"card mb-4\">\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<!-- Grid row -->\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<!-- Grid column -->\r\n\t\t\t\t\t<div class=\"col-md-12\">\r\n\r\n\t\t\t\t\t\t<h2 class=\"pt-5 pb-4 text-center font-bold font-up\"></h2>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- Grid column -->\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- Grid row -->\r\n\t\t\t\t<!--Table-->\r\n\t\t\t\t<table class=\"table table-striped\">\r\n\t\t\t\t\t<!--Table head-->\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t<th>Round</th>\r\n\t\t\t\t\t\t\t<th>Name team 1</th>\r\n\t\t\t\t\t\t\t<th>Elo team 1</th>\r\n\t\t\t\t\t\t\t<th>Name team 2</th>\r\n\t\t\t\t\t\t\t<th>Elo team 2</th>\r\n\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t<th>Winner</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<!--Table head-->\r\n\t\t\t\t\t<!--Table body-->\r\n\t\t\t\t\t<tbody id=\"table\">\r\n\t\t\t\t\t\t<tr *ngFor=\"let elem of plays\">\r\n\t\t\t\t\t\t\t<th scope=\"row\">{{elem.pos}}</th>\r\n\t\t\t\t\t\t\t<td>{{elem.round}}</td>\r\n\t\t\t\t\t\t\t<td>{{elem.name1}}</td>\r\n\t\t\t\t\t\t\t<td>{{elem.elo1}}</td>\r\n\t\t\t\t\t\t\t<td>{{elem.name2}}</td>\r\n\t\t\t\t\t\t\t<td>{{elem.elo2}}</td>\r\n\t\t\t\t\t\t\t<td>{{elem.date}}</td>\r\n\t\t\t\t\t\t\t<td>{{elem.nameWinner}}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<form action='/gameData'>\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"name1\" value=\"{{elem.name1}}\">\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"elo1\" value=\"{{elem.elo1}}\">\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"name2\" value=\"{{elem.name2}}\">\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"elo2\" value=\"{{elem.elo2}}\">\r\n\r\n\t\t\t\t\t\t\t<form [routerLink]=\"['/updateMatch/',idTournament,elem.pos]\">\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" class=\"button\" value=\"UpdateMatch\">\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\">-->\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<!--Table body-->\r\n\t\t\t\t</table>\r\n\t\t\t\t<!--Table-->\r\n\t\t\t\t<!--Bottom Table UI-->\r\n\r\n\t\t\t\t<div id='loader' class=\"d-flex justify-content-center\">\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<!--Pagination -->\r\n\t\t\t\t\t\t<!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\">-->\r\n\r\n\r\n\t\t\t\t\t<!--/Pagination -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</main>\r\n\r\n\t\r\n\r\n</body>\r\n\r\n</html>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { Play } from '../models/play.model';\r\nimport { MatchService, resultBody } from '../_servicies/match.service';\r\nimport { TournamentService } from '../_servicies/tournament.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { TeamsService } from '../_servicies/teams.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Game } from '../models/game.model';\r\nimport { Team } from '../models/team.model';\r\n\r\n@Component({\r\n    selector: 'updateMatch',\r\n    templateUrl:'./updateMatch.component.html',\r\n})\r\n\r\nexport class UpdateMatchComponent{\r\n    idTournament:number;\r\n    idPlay:number;\r\n    play = new Play;\r\n    resultArray = new Array<resultBody>();\r\n    games:Array<Game>;\r\n    id:Array<number>;\r\n    team:Team;\r\n    winnerName:string;\r\n\r\n    constructor(private matchservice: MatchService, private tournamentservice:TournamentService, private router: Router,\r\n        activatedRoute: ActivatedRoute, private teamsservice:TeamsService){\r\n        this.idTournament = activatedRoute.snapshot.params['idTournament'];\r\n        this.idPlay = activatedRoute.snapshot.params['pos'];\r\n        this.id=new Array();\r\n    };\r\n\r\n    ngOnInit(){\r\n        this.resultArray[0]=new resultBody;\r\n        this.resultArray[1]=new resultBody;\r\n        this.tournamentservice.getPlays(this.idTournament).subscribe(\r\n            response => {\r\n                let data: any = response;\r\n                this.play = data[this.idPlay-1];\r\n            },\r\n            error => console.error('Error finding plays' + error)\r\n         );\r\n    }\r\n    updateGame(){        \r\n        this.matchservice.getGames(this.idTournament).subscribe(\r\n            response => {\r\n                let data: any = response;\r\n                this.games=response;\r\n                this.tournamentservice.getPlays(this.idTournament).subscribe(\r\n                    response => {\r\n                        let data: any = response;\r\n                        this.play = data[this.idPlay-1];\r\n                        this.teamsservice.getTeambyName(this.play.name1).subscribe(\r\n                            response => {\r\n                                let data: any = response;\r\n                                this.team = data;\r\n                                this.id[0]=this.team.id;\r\n                                this.teamsservice.getTeambyName(this.play.name2).subscribe(\r\n                                    response => {\r\n                                        let data: any = response;\r\n                                        this.team = data;\r\n                                        this.id[1]=this.team.id;\r\n\r\n                                        if (this.winnerName===this.play.name1){\r\n                                            this.resultArray[0].winner=true;\r\n                                            this.resultArray[1].winner=false;\r\n                                        }\r\n                                        else{\r\n                                            this.resultArray[0].winner=false;\r\n                                            this.resultArray[1].winner=true; \r\n                                        }                                   \r\n                                        this.matchservice.updateMatch(this.games,this.idPlay, this.id ,this.resultArray);   \r\n                                        window.history.back();                                    \r\n                                    },\r\n                                    error => console.error('Error finding team'+ error)\r\n                                );\r\n                            },   \r\n                        );\r\n                    },\r\n                    error => console.error('Error finding plays' + error)\r\n                 );\r\n            },\r\n            error => console.error('Error finding plays' + error)\r\n         );\r\n    }\r\n}\r\n \r\n\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"ISO-8859-1\">\r\n<link\r\n\thref=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\"\r\n\trel=\"stylesheet\">\r\n\t<link href='https://fonts.googleapis.com/css?family=Holtwood+One+SC'\r\n\trel='stylesheet' type='text/css'>\r\n\t<link\r\n\thref='https://fonts.googleapis.com/css?family=Kaushan+Script|Herr+Von+Muellerhoff'\r\n\trel='stylesheet' type='text/css'>\r\n\t<link href='https://fonts.googleapis.com/css?family=Abel'\r\n\trel='stylesheet' type='text/css'>\r\n\t<link\r\n\thref='https://fonts.googleapis.com/css?family=Istok+Web|Roboto+Condensed:700'\r\n\trel='stylesheet' type='text/css'>\r\n\t<link href=\"/css/Tournament/diamonds-tournament-style.css\"\r\n\trel='stylesheet' type=\"text/css\">\r\n\t<link href=\"/core/bootstrap.min.css\" rel=\"stylesheet\">\r\n<title>Play page</title>\r\n</head>\r\n<body>\t\t\t\t\t\r\n\t<div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t<div class=\"modal-content\">\r\n\t\t\t<div class=\"modal-body\">\r\n\t\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t\t<div class=\"row align-items-center\">\r\n\t\t\t\t\t\t<div class=\"col-md-4 ml-auto\">\r\n\t\t\t\t\t\t\t<p>NAME: {{play.name1}}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-4 ml-auto\">\r\n\t\t\t\t\t\t\t<p class=\"align-middle\">Mach is in progress</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-4 ml-auto\">\r\n\t\t\t\t\t\t\t<p>NAME: {{play.name2}}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row align-items-center\">\r\n\t\t\t\t\t\t<div class=\"col-md-4 ml-auto\">\r\n\t\t\t\t\t\t\t<p>ELO: {{play.elo1}}pt</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-4 ml-auto\"></div>\r\n\t\t\t\t\t\t<div class=\"col-md-4 ml-auto\">\r\n\t\t\t\t\t\t\t<p>ELO: {{play.elo2}}pt</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t<!--{{#admin}}-->\r\n\t\t\t<p>Update game</p>\r\n            <form>\r\n\t\t\t\t<input type=\"hidden\" name=\"team1Name\" value=\"{{play.name1}}\">\r\n\t\t\t\t<input type=\"hidden\" name=\"team2Name\" value=\"{{play.name2}}\">\r\n\t\t\t\t<input [(ngModel)]=\"resultArray[0].result\" type=\"number\" name=\"puntuation1\" placeholder=\"Team 1 result\">\r\n\t\t\t\t<input [(ngModel)]=\"resultArray[1].result\" type=\"number\" name=\"puntuation2\" placeholder=\"Team 2 result\">\r\n                <input [(ngModel)]=\"winnerName\" type=\"text\" name=\"winner\" \r\n                 placeholder=\"Name of the winner team\">\r\n\t\t\t\t<input type=\"submit\" value=\"Submit\" (click)=\"updateGame()\">\r\n\t\t\t\t<!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\">-->\r\n\t\t\t</form>\r\n\t\t\t<!--{{/admin}}-->\r\n\t        </div>\r\n\t    </div>\r\n\t</div>\r\n\r\n\r\n</body>\r\n</html>","import { Component } from '@angular/core';\r\n\r\nimport { Play } from '../models/play.model';\r\nimport { MatchService, resultBody } from '../_servicies/match.service';\r\nimport { TournamentService } from '../_servicies/tournament.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ProfileService } from '../_servicies/profile.service';\r\nimport { UsersService } from '../_servicies/users.service';\r\nimport { User } from '../models/user.model';\r\nimport { PlayersService } from '../_servicies/players.service';\r\nimport { Player }  from '../models/player.model'\r\nimport { UserPlayerWrapper } from '../models/upwrapper.model';\r\n \r\n@Component({\r\n    selector: 'updateProfile',\r\n    templateUrl:'./updateProfile.component.html',\r\n    styleUrls: ['../register/register.component.css']\r\n})\r\n\r\nexport class UpdateProfileComponent{\r\n    selectedFile:File;\r\n    user :User;\r\n    player:Player;\r\n    username:String;\r\n    wrapper = new UserPlayerWrapper;\r\n    constructor( private playerService:PlayersService, private profileService: ProfileService, private usersService:UsersService){\r\n            \r\n    };\r\n\r\n    ngOnInit(){\r\n        this.username = this.usersService.getActualUserName();\r\n        console.log(this.username);\r\n        this.usersService.getUserByUserName(this.username).subscribe(\r\n            usr =>{\r\n                this.user = usr;\r\n                console.log(this.user.iduser);\r\n                this.playerService.getPlayerByUserId(this.user.iduser).subscribe(\r\n                    plyr =>{\r\n                        this.player= plyr;\r\n                    },\r\n                    error => {\r\n                        console.error('Error finding player' + error)\r\n                    }\r\n                )\r\n            },\r\n            error => {\r\n                console.error('Error finding user' + error)\r\n            }\r\n        )\r\n\r\n        \r\n    }\r\n    upload(){\r\n        const uploadData = new FormData();\r\n        uploadData.append('image', this.selectedFile, this.selectedFile.name);\r\n        this.profileService.uploadProfilePicture(uploadData,this.user.iduser).subscribe(\r\n            error =>{\r\n                console.error('Error finding player' + error); \r\n            }\r\n        )\r\n    }\r\n    onFileChanged(event) {\r\n        this.selectedFile = event.target.files[0]\r\n      }\r\n    updateProfile(name,username,description,pass:string){\r\n        this.wrapper.user = this.user;\r\n        this.wrapper.description = this.player.description;\r\n        if (name != \"\"){\r\n            this.wrapper.user.name = name;\r\n        }\r\n        if (username !=\"\"){\r\n            this.wrapper.user.username = username;\r\n        }\r\n        if (description !=\"\"){\r\n            this.wrapper.description = description;\r\n        }\r\n        if (pass !=\"\"){\r\n            this.wrapper.user.password= pass;\r\n        }\r\n        if (this.selectedFile != null){\r\n            this.upload();\r\n        }\r\n        console.log(name);\r\n        this.profileService.updateProfile(this.wrapper).subscribe(\r\n            response =>{\r\n                window.history.back();\r\n            },\r\n            error => {\r\n                console.error(\"Error updating user\")\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n}","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n<title>eTorneos - Edit profile</title>\r\n\r\n<!-- Bootstrap core CSS -->\r\n<meta name=\"theme-color\" content=\"#563d7c\">\r\n\r\n</head>\r\n<body>\r\n<!-- NavBar -->\r\n<div class=\"container\">\r\n\t<div class=\"row justify-content-center\">\r\n\t\t<div class=\"col-md-8\">\r\n\t\t\t<div class=\"card\">\r\n\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t<form class=\"form-horizontal\" enctype=\"multipart/form-data\">\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label for=\"name\" class=\"cols-sm-2 control-label\">New\r\n\t\t\t\t\t\t\t\tname</label>\r\n\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-user fa\" aria-hidden=\"true\"></i></span> \r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" #name placeholder=\"{{user.name}}\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label for=\"email\" class=\"cols-sm-2 control-label\">Description\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-envelope fa\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"description\" #desc placeholder=\"{{player.description}}\" /> \r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label for=\"username\" class=\"cols-sm-2 control-label\">New\r\n\t\t\t\t\t\t\t\tusername</label>\r\n\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-users fa\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"username\" id=\"username\" placeholder=\"{{user.username}}\" #username />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label for=\"password\" class=\"cols-sm-2 control-label\">New\r\n\t\t\t\t\t\t\t\tpassword</label>\r\n\t\t\t\t\t\t\t<div class=\"cols-sm-10\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i></span> \r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" #pass/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<p>Foto:</p>\r\n\t\t\t\t\t\t\t<input style=\"display : none\" type='file' name='image' accept=\".jpg, .jpeg\" (change)=\"onFileChanged($event)\" #fileInput>\t\r\n\t\t\t\t\t\t\t<button (click)=\"fileInput.click()\">Select File</button>\r\n\t\t\t\t\t\t\t<!--<button (click)=\"upload()\">Upload!</button>\t-->\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group \">\r\n\t\t\t\t\t\t\t<button (click)=\"updateProfile(name.value,username.value,desc.value,pass.value)\"\r\n\t\t\t\t\t\t\t\tclass=\"btn btn-primary btn-lg btn-block login-button\">Confirm\r\n\t\t\t\t\t\t\t\tchanges</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</body>\r\n</html>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"api/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}